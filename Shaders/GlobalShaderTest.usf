// GlobalShaderTest.usf

#include "/Engine/Public/Platform.ush"
#include "/Engine/Private/Common.ush"      // C++에서 만든 UniformBuffer 사용위해 추가
                                           // C++에서 정의한 모든 UniformSturct는 Common에 있음

struct TestStruct
{
    float3 TestPosition;
};

RWStructuredBuffer<TestStruct> TestStructureBuffer;
RWTexture2D<float4> OutputSurface;

[numthreads(32, 32, 1)]
void MainCS(uint3 ThreadID : SV_DispatchThreadID)
{
    float SizeX, SizeY;
    OutputSurface.GetDimensions(SizeX, SizeY);
    
    float2 Resolution = float2(SizeX, SizeY);
    float2 UV = (ThreadID.xy / Resolution.xy) - 0.5f;
    
    // FGlobalShaderTestUniform 라는 UniformBuffer의 ColorOne.r를 시간으로 사용.
    float GlobalTime = FGlobalShaderTestUniform.ColorOne.r;
    
    float T = GlobalTime * 0.1 + ((0.25 + 0.05 * sin(GlobalTime * 0.1)) / (length(UV.xy) + 0.07)) * 2.2;
    float SI = sin(T);
    float CO = cos(T);
    float2x2 MA = { CO, SI, -SI, CO };
    
    float V1, V2, V3;
    V1 = V2 = V3 = 0.0;
    
    float S = 0.0;
    for (int i = 0; i < 90; i++)
    {
        float3 P = S * float3(UV, 0.0);
        P.xy = mul(P.xy, MA);
        P += float3(0.22, 0.3, S - 1.5 - sin(GlobalTime * 0.13) * 0.1);
          
        for (int i = 0; i < 8; i++)    
            P = abs(P) / dot(P, P) - 0.659;
  
        V1 += dot(P, P) * 0.0015 * (1.8 + sin(length(UV.xy * 13.0) + 0.5 - GlobalTime * 0.2));
        V2 += dot(P, P) * 0.0013 * (1.5 + sin(length(UV.xy * 14.5) + 1.2 - GlobalTime * 0.3));
        V3 += length(P.xy * 10.0) * 0.0003;
        S += 0.035;
    }
  
    float Len = length(UV);
    V1 *= lerp(0.7, 0.0, Len);
    V2 *= lerp(0.5, 0.0, Len);
    V3 *= lerp(0.9, 0.0, Len);

    float3 Col = float3(V3 * (1.5 + sin(GlobalTime * 0.2) * 0.4), (V1 + V3) * 0.3, V2)
                    + lerp(0.2, 0.0, Len) * 0.85
                    + lerp(0.0, 0.6, V3) * 0.3;
  
    float3 Powered = pow(abs(Col), float3(1.2, 1.2, 1.2));
    float3 Minimized = min(Powered, 1.0);
    float4 OutputColor = float4(Minimized, 1.0);
    
    OutputSurface[ThreadID.xy] = OutputColor;
    TestStructureBuffer[0].TestPosition = float3(0.5, 0.5, 0.5);    // 테스트로 임의의 값으로 변경 시켜봄
}